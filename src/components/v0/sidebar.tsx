/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/KxwgBBek6YV
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
'use client';

import { useState } from 'react';
import Link from 'next/link';
import { Button } from '@/components/ui/button';
import {
  Card,
  CardHeader,
  CardTitle,
  CardDescription,
  CardContent,
  CardFooter,
} from '@/components/ui/card';

export function Sidebar() {
  const [isOpen, setIsOpen] = useState(false);
  const [draggingCard, setDraggingCard] = useState(null);
  const handleDragStart = (card: any) => {
    setDraggingCard(card);
  };
  const handleDragOver = (e: any) => {
    e.preventDefault();
  };
  const handleDrop = (e: any) => {
    e.preventDefault();
    setDraggingCard(null);
  };
  return (
    <div className="flex min-h-screen z-30">
      <div className="px-8 py-8 z-20 fixed inset-y-0">
        <Button
          size="icon"
          variant="ghost"
          className="bg-white"
          onClick={() => setIsOpen(!isOpen)}
        >
          <MenuIcon className="h-6 w-6" />
        </Button>
      </div>
      <aside
        className={`fixed inset-y-0 left-0 z-20 flex w-[320px] flex-col border-r bg-background transition-all duration-300 ${
          isOpen ? 'translate-x-0' : '-translate-x-full'
        }`}
      >
        <div className="flex h-16 shrink-0 items-center justify-between border-b px-4">
          <Link href="#" className="font-bold" prefetch={false}>
            Arithmetic Ops
          </Link>
          <Button
            size="icon"
            variant="ghost"
            onClick={() => setIsOpen(!isOpen)}
          >
            <XIcon className="h-6 w-6" />
          </Button>
        </div>
        <nav className="flex flex-1 flex-col overflow-auto py-4">
          <div
            className={`grid gap-4 px-4 ${draggingCard ? 'opacity-50' : ''}`}
            onDragOver={handleDragOver}
            onDrop={handleDrop}
          >
            <Card
              onDragStart={() => handleDragStart('addition')}
              draggable
              className="cursor-grab"
            >
              <CardHeader>
                <CardTitle>Addition</CardTitle>
                <CardDescription>
                  The process of combining two or more quantities.
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="flex items-center justify-center text-4xl font-bold">
                  +
                </div>
              </CardContent>
              <CardFooter>
                <Button variant="outline">Learn More</Button>
              </CardFooter>
            </Card>
            <Card
              onDragStart={() => handleDragStart('subtraction')}
              draggable
              className="cursor-grab"
            >
              <CardHeader>
                <CardTitle>Subtraction</CardTitle>
                <CardDescription>
                  The process of taking one quantity away from another.
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="flex items-center justify-center text-4xl font-bold">
                  -
                </div>
              </CardContent>
              <CardFooter>
                <Button variant="outline">Learn More</Button>
              </CardFooter>
            </Card>
            <Card
              onDragStart={() => handleDragStart('multiplication')}
              draggable
              className="cursor-grab"
            >
              <CardHeader>
                <CardTitle>Multiplication</CardTitle>
                <CardDescription>
                  The process of combining two or more quantities repeatedly.
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="flex items-center justify-center text-4xl font-bold">
                  ร
                </div>
              </CardContent>
              <CardFooter>
                <Button variant="outline">Learn More</Button>
              </CardFooter>
            </Card>
            <Card
              onDragStart={() => handleDragStart('division')}
              draggable
              className="cursor-grab"
            >
              <CardHeader>
                <CardTitle>Division</CardTitle>
                <CardDescription>
                  The process of splitting a quantity into equal parts.
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="flex items-center justify-center text-4xl font-bold">
                  รท
                </div>
              </CardContent>
              <CardFooter>
                <Button variant="outline">Learn More</Button>
              </CardFooter>
            </Card>
          </div>
        </nav>
      </aside>
    </div>
  );
}

function MenuIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <line x1="4" x2="20" y1="12" y2="12" />
      <line x1="4" x2="20" y1="6" y2="6" />
      <line x1="4" x2="20" y1="18" y2="18" />
    </svg>
  );
}

function XIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M18 6 6 18" />
      <path d="m6 6 12 12" />
    </svg>
  );
}
